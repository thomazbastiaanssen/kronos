% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{kronos}
\alias{kronos}
\title{Fit a cosinor model and extract relevant parameters}
\usage{
kronos(
  x,
  measurement,
  groups = NULL,
  time,
  period = 24,
  pairwise = F,
  verbose = T
)
}
\arguments{
\item{x}{input data}

\item{measurement}{A string. Should be the column name containing the meansurement data}

\item{groups}{A string. Should be the column name containing the group names. If this is kept NULL, kronos will fit a single model without groups.}

\item{time}{A string. Should be the column name containing the time values.}

\item{period}{A numeric. The length of a period, in the same format as the \code{time} parameter.}

\item{pairwise}{A boolean. Toggles whether to perform pairwise ANOVAs as a TukeyHSD-like post-hoc.}

\item{verbose}{A boolean. Toggles whether to print diagnostic information while running. Useful for debugging errors on large datasets.}
}
\value{
A kronosOut S4 object containing coefficients and all operations.
}
\description{
This is the main workhorse function in the kronos package. It manages the individual functionalities of kronos, including rhythmicity analysis and differential rhythmicity.
}
\examples{
\dontrun{
library(tidyverse)

dat = read.delim("~/Documents/PhD/circadian/diff_rhythm/TPH1_colon.csv", sep = ",")

out = kronos(x = dat, measurement = "Value", time = "Time", groups = "Treatment", period = 24)

out \%>\% {
  ggplot() +
    #Light gray rectangle for dark phase
    geom_rect(data=NULL,aes(xmin=12,xmax=Inf,ymin=-Inf,ymax=Inf),
              fill="lightgray") +
    #Whiskers for SEM
    geom_errorbar(data = .@input \%>\%
                    group_by(Time, Treatment) \%>\%
                    summarise(stder = std(Value),
                              Value = mean(Value, na.rm = T)),
                  aes(x = Time,
                      ymin = Value - stder,
                      ymax = Value + stder,
                      group = interaction(Time, Treatment)),
                  width = 2, position = position_dodge(0.8)) +
    #Big average point per group
    geom_point(data = .@input \%>\%
                 group_by(Time, Treatment) \%>\%
                 summarise(Value = mean(Value, na.rm = T)),
               aes(x = Time, y = Value, fill = Treatment),
               size = 4, shape = 21,
               position = position_dodge(0.8))+
    #Smaller points per observation
    geom_point(data = .@input, aes(x = Time, y = Value, fill = Treatment),
               shape = 21,
               position = position_dodge(0.8),
               alpha = 3/4) +
    
    #add the line information
    geom_line(data = .@to_plot, aes(x = zt, y = pred_value, colour = Treatment)) +
    
    #Separate by treatment?
    #facet_wrap(~Treatment) +
    #Fix scales and general layout
    scale_x_continuous(breaks = c(0, 6, 12, 18, 24)) +
    theme_bw() +
    xlab("Time (h)") +
    ylab("Gene expression")
}
} 

}
